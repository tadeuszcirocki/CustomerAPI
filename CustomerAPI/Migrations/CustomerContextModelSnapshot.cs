// <auto-generated />
using System;
using CustomerAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CustomerAPI.Migrations
{
    [DbContext(typeof(CustomerContext))]
    partial class CustomerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CustomerAPI.Models.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new { CustomerId = 1L, DateOfBirth = new DateTime(1946, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), Email = "america.fckyeah@gmail.com", FirstName = "Donald", LastName = "Trump", PhoneNumber = "999-888-7777" },
                        new { CustomerId = 2L, DateOfBirth = new DateTime(1611, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), Email = "jan.hewe@gmail.com", FirstName = "Jan", LastName = "Heweliusz", PhoneNumber = "111-222-3333" }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
